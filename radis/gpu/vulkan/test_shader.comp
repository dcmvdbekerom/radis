#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_shader_atomic_float : enable

layout (local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2 ) in;

layout(std140, binding = 0) uniform initData{
    int Nt;
	int Nf;
    int Nb;
	float dt;
	float wL;
} init_d;

layout(std430, binding = 3) buffer SSBO1 {
   vec2 data_FT_d[];
};

void main() {

    const float pi = 3.141592653589793f;

	uint k = gl_WorkGroupID.x * gl_WorkGroupSize.x + gl_LocalInvocationID.x; //gl_GlobalInvocationID.x;
    uint m = gl_WorkGroupID.y * gl_WorkGroupSize.y + gl_LocalInvocationID.y; //gl_GlobalInvocationID.y;

	if ((k >= init_d.Nf) || (m >= init_d.Nb)) return;

	float x = k / (init_d.Nt * init_d.dt);
	float mul = exp(- pi * x * init_d.wL);
	data_FT_d[k + m*init_d.Nf] = data_FT_d[k + m*init_d.Nf] * mul;
}

